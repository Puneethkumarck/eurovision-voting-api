plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
}

group = 'com.pega'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate:hibernate-validator:8.0.0.Alpha3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

tasks.jar {
	enabled = false
}

jacocoTestReport {
	reports {
		xml.enabled = true
		csv.enabled = false
		xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
	}
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", "Puneethkumarck_eurovision-voting-api"
		property "sonar.organization", "ranganathasoftware"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
		property "sonar.exclusions", "src/main/java/com/gov/pega/votingapi/config/LoadDataBase.java," +
				"src/main/java/com/gov/pega/votingapi/exception/**"
	}

}